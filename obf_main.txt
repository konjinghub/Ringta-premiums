--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,w,w)local w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=94,68,39,33,88,60,40,76,80,45,67,61,21,58,56,76,80,46,40,64,23,64,83,83,91,64,56,69,58,47,19,96,36,14,27,34,36,75,54,30,83,65,43,71,18,42,43,47,94,88,17 while w~=74 do if x<=722 then if x<=407 then if x>=229 then if x>=334 then if x>=369 then if x>375 then bh=setmetatable x=435 else x=407 bs=(getfenv or function()return _ENV end)end else ch=math.ldexp x=369 end else if x>=262 then if x>271 then bb=table.insert x=334 else x=303 bz=table.concat end else ck=string.rep x=262 end end else if x<=116 then if x>74 then x=140 do cf=string.byte end else x=116 y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=nil end else if x>=161 then if x>168 then x=229 bt=string.gsub else ce=string.sub x=182 end else x=161 do y=string.char end end end end else if x<=543 then if x<=451 then if x<447 then bn=select x=451 else x=471 bq=type end else if x<=471 then ba=(function(bb,bh,bh)if'number'==bq(bb)then return true else return false end end)x=508 else if x>514 then do bk=math.floor end x=589 else cc=math.abs x=543 end end end else if x<=643 then if x<=589 then cj=(unpack or table.unpack)x=610 else if x<639 then x=643 do bi=tonumber end else x=666 do bd={}end end end else if x>=693 then if x<716 then bg=btfunction(ba,bb,bb,bb)return bd[bi(ba,16)]end)x=722 else x=754 bw={{0,1,2,3,4,5,6,7,8,9,l,11,12,13,14,15,},{1,0,3,2,p,4,f,6,9,8,11,10,13,12,15,m,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,k,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,b,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,n,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,c,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else x=693 for b=0,255 do bd[b]=y(b);end end end end end else if x>=1119 then if x>=1256 then if x>=1345 then if x>=1382 then if x>1388 then w=74;else x=1402 return cb(ci(bs()),{},bs())();end else cb=function(b,c,f,k,k)local k,l,m,n,p do m=b[164]end do n=b[89]end k=b[148]p=b[156]do l=bf end return function(...)local b,l,w,y,ba,bb,bd,bh,bi bi=1 do bb=-1 end b=-1 bh={}w={...}l=(bn('#',...)-1)y={}bd={}for b=0,l do if(not(b<k))then bh[(b-k)]=w[(b+1)];else bd[b]=w[(b+1)];end;end;do ba=(l-k+1)end while true do local b,ba,bk,bq,bs,bt,bz,cc,ce,ch bt=n[bi]ce=bt[36]bq=bt[174]do bk=bt[160]end do ba=bt[45]end do ch=bt[126]end cc=bt[d]b=bt[25]bs=bt[62]do bz=bt[88]end do if not(bt[36]<49)then do if not(ce>73)then if not(ce<61)then do if not(ce<67)then if not(ce>69)then do if not(ce>67)then bd[bk]=cb(m[bs],nil,f);else if(ce<69)then local d d=bk bd[d]=bd[d](cj(bd,d+1,bb));else bd[bt[160]]=nil;end end end else if not(ce<72)then if(ce<73)then for d=bk,bs do bd[d]=nil;end;else bd[bt[160]]=bd[bt[62]][p[ch]];end else do if not(ce~=70)then local d,bq d=bs bq=bd[d]for ck=(d+1),ch do bq=(bq..bd[ck]);end;bd[bk]=bq;else local d do d=bd[b][bt[147]]end bd[b][cc]=(d..bd[ch]);end end end end else if not(ce<64)then if not(ce<65)then if(bt[36]>65)then do bd[bz]();end else bd[bk]=(0~=bs);do bi=(bi+1);end end else do bd[bk]=bf[ba]end end else if not(bt[36]<62)then if(ce<63)then bd[bk]=(bd[bt[62]]-bd[ch]);else bd[bz]=(function()bd[bk]=cb(m[ba],nil,f);end)end else do bd[bk]=p[bt[62]]end end end end end else if not(ce<55)then if not(ce>57)then if not(bt[36]<56)then do if(ce<57)then local d d=bk do do return cj(bd,d,(d+bs))end end;else local d,bq d=bk do bq={}end if(#y>0)then for ck=1,#y do local cl cl=y[ck]for ck=0,#cl do local cm,cn,co cm=cl[ck]co=cm[1]cn=cm[2]do if(co==bd and cn>=0)then bq[cn]=co[cn]do cm[1]=bq end end end end end end return cj(bd,d,bb);end end else c[bt[62]]=bd[bk];end else if not(ce>58)then else if(ce<60)then do bd[bt[160]]=bd[bs]end else do do return bd[b][cc]end end end end end else if not(ce>51)then if not(ce>49)then do if((p[bk]<bd[ch]))then bi=bs;end;end else do if not(ce~=50)then bd[bk]=(bd[bt[62]]*p[ch]);else do bd[bt[bk]]=bd end end end end else if not(ce<53)then if 53==ce then local b b=bk bd[b](bd[(b+1)])else do bf[bk]={}end end else bd[bt[160]]=f[p[bs]][p[bt[126]]];end end end end else if not(ce>85)then if not(ce<80)then if not(ce>82)then if not(bt[36]<81)then if(ce>81)then local b,d,bq,ck,cl b=bk ck=ch bq=(b+2)d={bd[b](bd[b+1],bd[bq])}for cm=1,ck do bd[(bq+cm)]=d[cm]end do cl=bd[(b+3)]end if cl then bd[bq]=cl else do bi=bs;end end;else end else local b,d,bq bq=bk do b=bd[(bq+2)]end d=(bd[bq]+b)do bd[bq]=d;end if((b>0))then if(not(d>bd[bq+1]))then do bi=bs;end bd[(bq+h)]=d;end elseif(not(d<bd[bq+1]))then bi=bs;bd[(bq+3)]=d;end end else do if not(bt[36]<84)then if(ce>84)then do while((bd[bk]==bd[ch]))do bi=bs;break end end else bf[bk]()end else bi=((p[bk]~=p[ch])and bs or bi)end end end else if not(ce<77)then if not(bt[36]>77)then bd[bk]=(bd[bs]+bd[bt[126]]);else if 78==ce then bd={};for b=0,l do do if(b<k)then bd[b]=w[(b+1)];else break end;end end;else f[p[bs]]=bd[bt[160]];end end else if not(bt[36]>74)then local b,d,h h=bk d=bd[h]b=bs for k=1,b do d[k]=bd[(h+k)]end;else do if(ce<76)then bd[bk]=not(bd[bs]==p[ch]);else bd[bk]=(bd[bs]+p[ch]);end end end end end else if not(ce>91)then if not(bt[36]>88)then if not(bt[36]<87)then if(ce>87)then bd[bk]();else while((bd[bk]>=bd[bt[126]]))do bi=bs;break end end else local b,d,h,k h=bk b={bd[h]()}d=ch do k=0 end for l=h,d do k=(k+1);bd[l]=b[k];end end else if not(ce<90)then if(bt[36]<91)then p=bf[bk](p)else bd[bk]=(bd[bs]%p[ch]);end else do bf=bd end end end else if not(ce<95)then if not(bt[36]>96)then if(ce<96)then do bd[bz]=(function()bd[bt[160]]=cb(m[ba],nil,f);end)end else n[bi]=by[bt[147]];bi=bs;end else if 97==ce then local b,d d,b=br(...)for b=1,bk do bd[(b-1)]=d[b]end else bi=((p[bk]<bd[ch])and bs or bi)end end else if not(ce<93)then if(ce<94)then local b b=bt[160]bd[b]=bd[b]();else local b,d b=bk d=bd[bs]bd[(b+1)]=d;do bd[b]=d[bd[ch]];end end else bd[bk][p[bs]]=bd[bt[126]];end end end end end end else do if not(ce>23)then if not(ce>11)then if not(ce>5)then do if not(bt[36]<3)then if not(ce>3)then do n[bi]={[62]=2,[160]=2,[147]=0,[36]=ce- -19,[126]=0};end bi=(bi-1);else if(ce>4)then if((bd[bk]<bd[ch]))then bi=bs;end;else bd[bk]=bd[bs];end end else if not(ce<1)then if(ce>1)then local b,d,h,k b=bk do k,d=br(bd[b](cj(bd,(b+1),bs)))end bb=(d+b-1)h=0 for d=b,bb do h=(h+1);bd[d]=k[h];end;else bd[bk]={};end else bd[bk]=-bd[bs];end end end else do if not(ce>8)then if not(ce<e)then if(bt[36]<8)then bd[bk]=c[bs];else local b,c b=bk do c=bd[bs]end bd[(b+1)]=c;bd[b]=c[p[ch]];end else do if bk then bk=false;ch=bs;bi=(bi-1);else bi=(bi+bt[62]+ch);end end end else do if not(ce>9)then local b b=bk bd[b]=bd[b](cj(bd,b+1,bs));else if(bt[36]<11)then bf[bk]=bf[ba]else local b,c b=bk c=bt[62]for d=b,c do bd[d]=bh[(d-b)];end;end end end end end end else if not(bt[36]<18)then if not(ce<21)then do if not(ce>21)then if(p[bt[126]]~=bd[bt[160]])then bi=bs;end;else if u==ce then do do return bd[bt[160]]end end else bd[bk][p[bs]]=p[ch];end end end else if not(ce<19)then do if 19==bt[a]then bd[bk]=(bd[bt[62]]%bd[ch]);else bd[bk]=(bd[bs]^bd[bt[126]]);end end else local a a=bk do return bd[a](cj(bd,(a+1),bs))end;end end else if not(bt[36]>14)then if not(ce>12)then local a,b,c b=bk a={bd[b](cj(bd,b+1,bs))}c=0 do for d=b,ch do c=(c+1);bd[d]=a[c];end end else if 13==bt[36]then local a a={}if(#y>0)then for b=1,#y do local c c=y[b]for b=q,#c do local d,e,h d=c[b]e=d[1]do h=d[2]end if(e==bd and h>=0)then a[h]=e[h]d[1]=a end end end end return false;else do bd[bk]=bd[bs][bd[ch]];end end end else if not(ce<g)then if not(ce~=16)then n[bi]=by[cc];bi=bs;else bd[bk]=(bd[bt[62]]/bd[ch]);end else bd[bt[160]][bd[bs]]=bd[bt[126]];end end end end else do if not(ce<36)then if not(ce<42)then if not(ce>44)then do if not(ce>42)then do bi=bs;end else if not(bt[36]~=43)then while(bd[bk]>bd[ch])do bi=bs;break end else local a,b,c do b=bk end a=bd[b]do c=bd[(b+2)]end do if((c>0))then if((a>bd[b+1]))then bi=bs;else bd[(b+3)]=a;end elseif((a<bd[b+1]))then bi=bs;else bd[(b+3)]=a;end end end end end else if not(ce>46)then if not(ce~=45)then do bd[bk]=f[p[bs]];end else local a,b b=bk a={}for c=1,#y do local d d=y[c]do for c=0,#d do local e,g,h g=d[c]do e=g[1]end do h=g[2]end if(e==bd and h>=b)then do a[h]=e[h];end g[1]=a;end;end;end end;end else do if not(ce~=47)then local a a=bt[160]bd[a]=bd[a](bd[a+1]);else do return bd[bt[160]]();end;end end end end else if not(ce<39)then if not(ce<40)then if(bt[36]<41)then bd[bk]=bf[ba]else do if not bd[ch]then do bd[bk]=bd[ch];end bi=bs;end;end end else end else do if not(bt[36]<37)then if(ce<38)then f=bd[bt[bk]]else if((bd[bt[160]]<p[ch]))then bi=bs;end;end else local a,b a=bk b={}if(#y>0)then do for c=1,#y do local d d=y[c]for c=0,#d do local e,f,g do g=d[c]end e=g[1]f=g[2]do if(e==bd and f>=t)then b[f]=e[f]g[1]=b end end end end end end return bd[a],bd[(a+1)]end end end end else if not(bt[36]<30)then do if not(ce<33)then if not(ce>33)then n[bi]={[147]=0,[r]=3,[126]=21,[62]=26,[36]=ce- -28};do bi=(bi-1);end else if(bt[36]>34)then if bd[bk]then bi=bs;end;else bb=bt[bt[160]];end end else if not(ce>30)then bd[bk]=(bd[bs]*bd[bt[126]]);else if 31==ce then local a,b,c,d do a=bk end d=((ch-1)*50)c=bd[a]do b=bs end for e=1,b do do c[(d+e)]=bd[(a+e)]end end;else bi=((p[bk]<p[ch])and bs or bi)end end end end else do if not(ce<27)then if not(ce<o)then if(ce<29)then if not bd[bk]then bi=bs;end;else bd[bt[160]]=(not bd[bs]);end else do bf[bt[160]]=bd[ba]end end else do if not(ce<25)then if(ce>25)then bd[bk]=#bd[bt[62]];else bd[bk]=(bd[bt[62]]/p[ch]);end else while(bd[bk]~=bd[ch])do bi=bs;break end end end end end end end end end end end end bi=(bi+1);end;end;end x=1382 end else if x<=1256 then ci=function(a,b)local b,c,d,e,f,g,h,k=88,78,43,92,81,18,41,70,94,23,11,41,47,60,57,46,14,94,82,44,23,69,72,92,89,33 while b~=47 do if c>=331 then if c<=395 then if c<=350 then if c<341 then do for b=1,cd()do local l,m,n,o,p,q=70,52,54,86,94,49,34,34,35,89,74,31,78,34,75,82,96,23,41,54,80,61,27,30,76 while l~=53 do if m>=292 then if m>=424 then if m<=456 then if m<450 then m=456 n[147]=bj(p,12,20);else m=480 n[25]=-n[160]end else if m<=480 then n[88]=-n[126]m=510 else if m>515 then break else m=559 g[b]=n;end end end else if m<=316 then if m<313 then m=316 do n[36]=bj(o,1,11);end else n[160]=bj(p,v,11);m=340 end else if m>345 then m=424 n[126]=bj(p,21,29);else m=381 n[62]=bj(o,12,33);end end end else if m<=112 then if m<=68 then if m>60 then m=83 n={{},nil,nil,nil}else n,o,p,q=nil m=68 end else if m>89 then m=159 n[125]={};else n[174]=ca();m=112 end end else if m>=213 then if m>=254 then if m>259 then n[79]=q m=292 else m=275 q=bj(p,1,2)end else o=cd()m=254 end else if m<181 then if 1==ca()then for b=1,ca()do n[125][b]={ca()==0,cd()}end end m=190 else m=213 p=cd()end end end end end end end c=350 else c=369 do f[89]=g;end end else if c>373 then h={}c=435 else c=395 k=cd()end end else if c<=466 then if c>443 then c=496 f[156]=h else c=466 for b=1,k do local l,m,n,o=81,30,19,77,61,12,90,33,83,14,81,26,98,98 while l~=32 do if m>=115 then if m>=135 then if m<148 then m=156 h[b]=n;else l=32;end else if(0==o)then do n=(not(ca()==0));end elseif(1==o)then n=z();elseif(not(o~=2))then do n=bp();end elseif(not(o~=3))then do n=a[bp()];end end;m=135 end else if m>=53 then if m<94 then m=97 o=ca()else m=115 n=nil end else m=53 n,o=nil end end end end end else if c<=496 then f[148]=ca();c=524 else if c<561 then c=570 return f;else break end end end end else if c<=168 then if c>=119 then if c<160 then d={}c=168 else f={}c=188 end else if c>84 then c=119 g={}else c=94 d,e,f,g,h,k=nil end end else if c>=258 then if c<284 then c=288 for a=1,cd()do d[a-1]=ci();end else f[164]=d;c=331 end else if c>195 then for a=(#by+1),(#by+e)do local b,d,f,g,h=49,57,53,37,70,34,31,33,67,22,20,80,38,68,73,28,31,90,48,82,95,66,44 while b~=38 do if d<=317 then if d<=166 then if d<=105 then if d>61 then d=127 f={}else f,g,h=nil d=105 end else if d>132 then d=194 g=cd()else f[174]=ca();d=166 end end else if d>=287 then if d>294 then d=340 f[36]=bj(h,1,11);else do f[79]=bj(g,1,2);end d=317 end else if d>197 then f[147]=ca();d=287 else d=241 do h=cd()end end end end else if d>=508 then if d<=551 then if d<543 then d=551 do f[25]=-f[160]end else f[88]=-f[126]d=576 end else if d>579 then b=38;else d=608 do by[a]=f;end end end else if d>=414 then if d<454 then d=463 f[126]=bj(g,21,29);else d=508 f[62]=bj(h,12,33);end else if d>342 then d=414 do f[45]=bj(g,12,20);end else do f[160]=bj(g,3,11);end d=378 end end end end end end c=258 else e=cd()c=231 end end end end end end x=1292 else if x<1309 then x=1316 bf={}else be={}x=1345 end end end else if x<=1138 then if x<1131 then bc=function()local a,b do a,b=cf(bg,bo,(bo+2))end bo=(bo+2);return((b*256)+a);end x=1138 else x=1165 z=function()local a,b,c,d,e,f,g,h=48,44,26,13,94,61,15,42,17,49,44,16,51,43,77,62,25,60,63 while a~=31 do if b<=198 then if b>=123 then if b<=123 then d=cd()b=157 else if b>162 then c=((-j)^bx(31,d,1))b=221 else if((e==0 and d==0))then do return 0 end end b=198 end end else if b<76 then b=81 c,d,e,f,g,h=nil else e=cd()b=123 end end else if b<=281 then if b>=240 then if b>248 then b=318 g=1 else h=(bx(0,d,20)*4294967296+e)b=281 end else f=bx(20,d,11)b=240 end else if b>=342 then if b<361 then b=363 return(c*(2^(f-1023))*(h/bl+g))else a=31;end else if 0==f then if not(h==0)then f=1 do g=0 end else return(c*0)end elseif not(f==2047)then else if 0==h then do return(c*(0/0))end else return(c*(1/0))end end b=342 end end end end end end else if x<=1165 then x=1198 bp=function(a,a,a)local a,b,c,d=38,56,63,29,38,68,97,73,98,82,70,51,75 while a~=28 do if b<=129 then if b>=98 then if b<121 then c=cd()b=129 else b=144 d=bg:sub(bo,(bo+c-1))end else c,d=nil b=98 end else if b>=163 then if b<181 then b=183 return d;else break end else b=163 bo=(bo+c);end end end end else if x>1204 then by={}x=1256 else x=1228 br=function(...)return{...},bn('#',...)end end end end end else if x<=875 then if x<=776 then if x<769 then x=776 bv=''else x=812 bl=(2^52)end else if x>=828 then if x<868 then x=875 cg=s else do for a=1,31 do do bu[a]=cg end cg=(cg*2)end end x=911 end else do bu={[0]=1}end x=828 end end else if x<=977 then if x<=911 then x=934 do bx=function(a,b,c,d)local d,e,f=77,65,52,50,86,90,56,75,33,29,41,17,97,12,79 while d~=28 do if e<=123 then if e>=83 then if e>89 then f=((b/bu[a])%bu[c])e=165 else e=123 f=nil end else f=nil e=83 end else if e>=181 then if e<198 then e=206 return f else d=28;end else e=181 f=(f-f%1)end end end end end else if x<973 then x=977 bm=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=i,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bw[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)else x=1017 bj=function(a,b,c,d,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end end else if x>=1060 then if x>1066 then do ca=function()local a a=cf(bg,bo,bo)bo=(bo+1);return a;end end x=1119 else x=1082 cd=function()local a,b,c,d a,b,d,c=cf(bg,bo,(bo+3))bo=(bo+4);do return((c*16777216)+(d*65536)+(b*256)+a);end end end else bo=1 x=1060 end end end end end end end)(36,4,11,147,7,7,16,3,0,1,6,10,14,10,28,5,0,160,2,0,22,3)end